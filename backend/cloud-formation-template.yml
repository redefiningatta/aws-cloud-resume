AWSTemplateFormatVersion: '2010-09-09'
Description: 'Static website with visitor counter and CloudFront access to S3'

Resources:
  ## S3 Bucket for static website hosting
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::AccountId}-myportfolio'
      AccessControl: Private
      WebsiteConfiguration:
        IndexDocument: index.html
        #ErrorDocument: error.html

  ## CloudFront Origin Access Identity
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'OAI for website bucket'

  ## CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        PriceClass: PriceClass_100
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'

        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          MinTTL: 0
          DefaultTTL: 300
          MaxTTL: 1200
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none

  ## Lambda Function for visitor counting
  VisitorCounterFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: visitorCounterFunction
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !GetAtt lambdaFunctionBucket.BucketName  # Replace with the name of your S3 bucket
        S3Key: lambda_function.zip       # Update if your zip file has a different name
      Runtime: python3.9
      Timeout: 10
      MemorySize: 128
    DependsOn: lambdaFunctionBucket

  ## API Gateway
  VisitorCounterAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: VisitorCounterAPI
      Description: API for visitor counter
      EndpointConfiguration:
        Types:
          - REGIONAL

  APIResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt VisitorCounterAPI.RootResourceId
      PathPart: 'count'
      RestApiId: !Ref VisitorCounterAPI

  APIMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId: !Ref APIResource
      RestApiId: !Ref VisitorCounterAPI
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - LambdaArn: !GetAtt VisitorCounterFunction.Arn

  APIDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: APIMethod
    Properties:
      RestApiId: !Ref VisitorCounterAPI
      StageName: prod

  ## DynamoDB Table for visitor count
  VisitorCountTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: VisitorCount
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  ## IAM Role for Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                Resource: !GetAtt VisitorCountTable.Arn

  ## Bucket Policy to allow CloudFront OAI access to the S3 bucket
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action: s3:GetObject
            Resource: !Sub '${WebsiteBucket.Arn}/*'

Outputs:
  WebsiteURL:
    Value: !GetAtt WebsiteBucket.WebsiteURL
    Description: URL for website hosted on S3
  CloudFrontDomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
    Description: Domain name of CloudFront distribution
  APIEndpoint:
    Value: !Sub 'https://${VisitorCounterAPI}.execute-api.${AWS::Region}.amazonaws.com/prod/count'
    Description: API Gateway endpoint URL for visitor counter
